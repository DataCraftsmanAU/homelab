apiVersion: apps/v1
kind: Deployment
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: sonarr-16-1683453500
      app.kubernetes.io/name: sonarr
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: '2023-05-31T10:01:51Z'
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: sonarr-16-1683453500
        app.kubernetes.io/name: sonarr
    spec:
      affinity: {}
      automountServiceAccountToken: true
      containers:
        - env:
            - name: TZ
              value: UTC
            - name: PUID
              value: '1000'
            - name: PGID
              value: '1000'
          image: ghcr.io/k8s-at-home/sonarr:v3.0.8.1507
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - /usr/bin/env
                - bash
                - '-c'
                - >-
                  curl --fail localhost:8989/api/v3/system/status?apiKey=`IFS=\>
                  && while read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo
                  $C; fi; done < /config/config.xml`
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: sonarr-16-1683453500
          ports:
            - containerPort: 8989
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8989
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 8989
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /snickynas
              name: snickynas
            - mountPath: /config
              name: sonarr-settings
              subPath: configs/sonarr
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - name: snickynas
          persistentVolumeClaim:
            claimName: snickynas
        - name: sonarr-settings
          persistentVolumeClaim:
            claimName: sonarr-settings
